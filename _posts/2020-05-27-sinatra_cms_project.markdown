---
layout: post
title:      "Sinatra CMS project"
date:       2020-05-27 05:31:33 -0400
permalink:  sinatra_cms_project
---


This project was a great, fascinating learning experience. This is the largest project I have ever completed (with 50 pages!) and therefore took a LOT of time and contained many mistakes along the way. I definitely learned that establishing your structure, not only of your database but also of your web pages' flow, early on makes the entire process MUCH smoother. Unfortunately, I discovered this by having to go back and restructure the webpages' flow partway through. I also discovered how important it is to read the project requirements several times, and check back with them periodically. I forgot to include privacy for individual user data, and had to tweak every single url and view to add it in later. One thing I ran into a problem with was getting data from a group of checkboxes on a form. It was simple enough to give each checkbox the same name, but that was not enough. They not only had to have the same name, but also use the Rack format to make them into a list. e.g. instead of `name=desires` they had to be `name=desires[]`. Correcting this in all relevant forms solved that issue, and created another. If nothing was selected from the checkbox group, the program crashed. I used `binding.pry` and `raise params` to investigate, and found that sometimes an empty checkbox group sent `params[:desires]` (for example) sometimes came in as `[]` and sometimes not at all (`nil`). In order to account for all three possibilities, I had to check params for each ckeckbox group coming in as: `if !(params[:desires].nil? || (params[:desires].length == 1 && params[:desires][0] == ''))` - i.e. check first if `params[:desires` exists, then if it does, make sure that it is not simply `[]`, then if not, continue on with the code. Once I had that check in place, though, the checkboxes ceased to be a problem. Overall, an amazing project, and I look forward to using it for my daily life.
